@model TelerikMovies.Web.Models.AccountInfoEditViewModel
@{
    ViewBag.Title = "Edit Profile";
    ViewBag.Result = Model.Result;
}
<br />
<br />
<h2>@ViewBag.Title</h2>
<div class="row">
    <div class="col s4 left left-align z-depth-5 portrait">
        <div class="container">   
            @if (Model.ImgUrl == null)
            {
                <img id="user-photo" class="responsive-img" data-defaulturl="@Url.Content("~/Img/no-image.png")" src="~/Img/no-image.png" />
            }
            else
            {
                <img id="user-photo" class="responsive-img" data-defaulturl="@Url.Content("~/Img/no-image.png")" src="@(Model.ImgUrl)" />
            }

        </div>
    </div>
    <div class="col s7 offset-s1  grey lighten-4 z-depth-5">
        @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { role = "form" ,@class= "show-loader" }))
        {
            @Html.AntiForgeryToken()
            <h4>Edit your accout info</h4>
            <hr />
            @Html.ValidationSummary("", new { @class = "red-text text-darken-4" })
            <div class="row">
                <div class="input-field offset-s1 col s10">
                    @Html.LabelFor(m => m.FirstName)
                    @Html.TextBoxFor(m => m.FirstName)
                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "red-text text-darken-4", data_length = "3" })
                </div>
            </div>
            <div class="row">
                <div class="input-field offset-s1 col s10">
                    @Html.LabelFor(m => m.LastName)
                    @Html.TextBoxFor(m => m.LastName)
                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "red-text text-darken-4", data_length = "3" })
                </div>
            </div>
                <div class="row">
                    <div class="input-field offset-s1 col s10">
                        @Html.LabelFor(m => m.City)
                        @Html.TextBoxFor(m => m.City)
                        @Html.ValidationMessageFor(m => m.City, "", new { @class = "red-text text-darken-4", data_length = "3" })
                    </div>
                </div>
                <div class="row">
                    <div class="input-field offset-s1 col s10">
                        @Html.LabelFor(m => m.ImgUrl)
                        @Html.TextBoxFor(m => m.ImgUrl)
                        @Html.ValidationMessageFor(m => m.ImgUrl, "", new { @class = "red-text text-darken-4" })
                    </div>
                </div>
                <div class="row">
                    <div class="col offset-s1 s10">
                        <div class="switch">
                            <label>
                                Female
                                <input type="checkbox" id="isMale" name="isMale" checked="@Model.isMale" value="true" />
                                <span class="lever"></span>
                                Male
                            </label>
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(x => x.UserName)
                <div class="row">
                    <div class="input-field offset-s1 col s10 name-container">
                        <button class="btn waves-effect waves-light  yellow accent-4" type="submit" name="action">
                            Submit
                            <i class="material-icons right">send</i>
                        </button>
                    </div>
                </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/PageScripts/edit-user.js"></script>
}
